enum banType
{
    USER
    IP
    MACHINE
}

enum banStatus
{
    BANNED
    APPEALING
    REJECTED
}

enum roomType
{
	PUBLIC
	LOCKED
	PASSWORD
	HIDDEN
}

enum Gender
{
	M
	F
}

enum FurniType
{
    FLOOR
    WALL
}

enum CatalogPageLayout {
	DEFAULT,
	FRONTPAGE,
	CLUB_BUY,
	CLUB_GIFT,
	RECYCLER,
	RECYCLER_INFO,
	RECYCLER_PRIZES,
	TROPHIES,
	PLASTO,
	MARKETPLACE,
	MARKETPLACE_OWN_ITEMS,
	PETS,
	SPACES,
	SOUNDMACHINE,
	GUILDS,
	INFO_DUCKETS,
	INFO_RENTABLES,
	INFO_PETS,
	ROOMADS,
	SINGLE_BUNDLE,
	SOLD_LTD_ITEMS,
	BADGE_DISPLAY,
	BOTS
}

type Ban @pgTable(name: "bans")
{
    id: ID! @id
    reason: String
    status: banStatus
    type: banType
    user: Int
    ip: String
    machine: String
    by: Int
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
}

type Badge @pgTable(name: "badges")
{
    id: ID! @id
    code: String! @unique
    description: String
}

type Bot @pgTable(name: "bots")
{
    id: ID! @id
    name: String
    motto: String
    inventory: Boolean
    owner: Int
    gender: Boolean
    figure: String
    type: String
    state: [String] @scalarList(strategy: RELATION)
    action: [String] @scalarList(strategy: RELATION)
    position: [Int] @scalarList(strategy: RELATION)
    messages: String
    chatBubble: Int
    chatAuto: Int
    chatRandom: Boolean
    chatDelay: Int @default(value: 4)
}

# type Soundtracks @pgTable(name: "soundtracks") {

# }

# @TODO: Create relation between CatalogPages (link -> id)
type CatalogFeatured @pgTable(name: "catalog_featured")
{
    id: ID! @id
    caption: String
    image: String 
    link: CatalogPage
    slot: Int
    updated: DateTime @updatedAt
}

type CatalogPage @pgTable(name: "catalog_pages")
{
	id: ID! @id
    link: String! @unique
	parent: CatalogPage
	layout: CatalogPageLayout @default(value: DEFAULT)
	order: Int
	name: String
    language: Language
	description: String
	icon: String
    banner: String
    teaser: String
	visible: Boolean @default(value: true)
	enabled: Boolean @default(value: true)
	rank: Int @default(value: 1)
	club: Boolean @default(value: false)
	vip: Boolean @default(value: false)
	body: Json
    product: Json
}

type CatalogItems @pgTable(name: "catalog_items")
{
    id: ID! @id
    page: CatalogPage
    name: String!
    amount: Int @default(value: 1)
    club: Boolean @default(value: false)
    available: Int @default(value: 0)
    limit: Int @default(value: 3)
    discount: Boolean @default(value: true)
}

type Currencies @pgTable(name: "currencies")
{
    id: ID! @id
    name: String!
    default: Int
}

type Rank @pgTable(name: "ranks")
{
    id: ID! @id
    order: Int!
    name: String!
}

type Language @pgTable(name: "languages")
{
    id: ID! @id
    name: String
    native: String
    code: String! @unique
    enabled: Boolean @default(value: true)
}

# type CatalogBundle @pgTable(name: "catalog_bundle")
# {
# 	id: ID! @id
# 	items: {}[]
# }

# type CatalogItem @pgTable(name: "catalog_items")
# {
#     id: ID! @id
#     page: CatalogPage!
#     item: Item[]!
#     name: String
#     # price: Currencies
#     amount: Int
#     order: Int
#     badge: Badge
#     limited: Boolean
#     maximum: Int @default(value: -1)
#     stack: Boolean @default(value: true)
#     active: Boolean @default(value: true)
#     offer: Boolean @default(value: true)
#     clubOnly: Boolean
# }

# DROP TABLE IF EXISTS `catalog_items`;
# CREATE TABLE IF NOT EXISTS `catalog_items` (
#   `id` int(11) NOT NULL AUTO_INCREMENT,
#   `page_id` int(11) NOT NULL,
#   `item_ids` varchar(256) CHARACTER SET latin1 COLLATE latin1_bin NOT NULL,
#   `catalog_name` varchar(40) NOT NULL,
#   `cost_credits` int(11) NOT NULL DEFAULT '5',
#   `cost_points` int(11) NOT NULL DEFAULT '0',
#   `points_type` int(3) NOT NULL DEFAULT '0',
#   `amount` int(3) NOT NULL DEFAULT '1',
#   `song_id` int(3) unsigned NOT NULL DEFAULT '0',
#   `limited_stack` int(5) NOT NULL DEFAULT '0',
#   `limited_sells` int(5) NOT NULL DEFAULT '0',
#   `extradata` varchar(256) NOT NULL DEFAULT '',
#   `club_only` enum('0','1') NOT NULL DEFAULT '0',
#   `have_offer` enum('0','1') NOT NULL DEFAULT '1',
#   `offer_id` int(11) DEFAULT NULL,
#   PRIMARY KEY (`id`)
# ) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=8413 ;

type Chatlog @pgTable(name: "chatlog")
{
    id: ID! @id
    habbo: Habbo!
    room: Room!
    message: String
    createdAt: DateTime @createdAt 
}

type ChatlogConsole @pgTable(name: "chatlogs_console")
{
    id: ID! @id
    from: Habbo! @relation(name: "ChatlogsConsoleFromUser")
    to: Habbo! @relation(name: "ChatlogsConsoleToUser")
    message: String
    createdAt: DateTime @createdAt
}

type ChatlogConsoleInvitations @pgTable(name: "chatlogs_console_invitations")
{
    id: ID! @id
    from: Habbo! @relation(name: "ChatlogsConsoleInvitationsFromUser")
    to: Habbo! @relation(name: "ChatlogsConsoleInvitationsToUser")
    message: String
    room: Room!
    createdAt: DateTime @createdAt
}

type Room @pgTable(name: "rooms")
{
	id: ID! @id
	name: String!
	description: String
	type: roomType @default(value: PUBLIC)
	category: Int
	owner: Habbo
	map: Json
	floorThickness: Float
	wallThickness: Float
	wallHeight: Float
	hideWalls: Boolean @default(value: false)
	hideWired: Boolean @default(value: false)
    currentUsers: Int @default(value: 0)
	maxUsers: Int @default(value: 10)
	allowPets: Boolean @default(value: false)
	allowPetsEating: Boolean @default(value: false)
	# rights: [User] @scalarList(strategy: RELATION)
	# items: [Item] @relation(name: "Items", onDelete: CASCADE)
}


# Furniture (Class) -> Catalog Item (Instance where its displayed on the catalog) -> Item (Instance with a User as the owner)
# type Item @pgTable(name: "items")
# {
#     id: ID! @id
#     name: String
#     public: String
#     type 
#     createdAt: DateTime @createdAt
#     updatedAt: DateTime @updatedAt
# }

# type Currencies {
#     id: ID! @id
#     name: String!
#     value: Int
# }

type NavigatorTab @pgTable(name: "navigator_tabs")
{
    id: ID! @id
    name: String
    order: Int
    language: Language
    categories: [NavigatorCategory!]!
}

type NavigatorCategory @pgTable(name: "navigator_categories")
{
    id: ID! @id
    name: String
    order: Int @unqiue
    parent: NavigatorTab
}

type News @pgTable(name: "news")
{
	id: ID! @id
	title: String
	summary: String
	body: String 
	image: String
	author: User
	createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
}

type Habbo @pgTable(name: "habbos")
{
    id: ID! @id
    user: User!
    username: String! @unique
    motto: String
	gender: Gender
    figure: String
    rank: Int
    vip: Int
    online: Boolean
    verified: Int
    home: Int
    volume: Int
	appearOffline: Boolean @default(value: false)
    allowTrade: Boolean @default(value: true)
	allowGifts: Boolean @default(value: true)
	allowMimic: Boolean @default(value: true)
	allowFollow: Boolean @default(value: true)
	allowWhisper: Boolean @default(value: true)
	allowFriendRequests: Boolean @default(value: true)
	allowBotSpeech: Boolean @default(value: true)
	allowPetSpeech: Boolean @default(value: true)
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
}

type User @pgTable(name: "users")
{
    id: ID! @id
    email: String
    password: String
    pin: Int
    habbos: [Habbo!]!
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updatedAt
}
